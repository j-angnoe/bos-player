<?php

define('TMP_DIR', __DIR__ . '/../../../tmp/bos-unit-tests/');

require_once __DIR__ . '/../includes.php';

try {

    // In this test we dont cover .sql, .jsonl 
    // as there are covered in 301-basics
    // In this test we focus on .sql.php and .jsonl.php
    // which allows us to modify the sql / jsonl based on 
    // environment variables and possibly module settings.

    $lastPort = '19111';

    $DC_UNIT_TEST = __DIR__ . '/../../../docker-compose.unit-test.yml';

    // Make sure our tmp directory exists before starting docker-compose
    createFiles([
        'env1.json' => json_encode([
            'name' => 'First environment',
            'storages' => [
                'database' => [
                    'database' => '303_env1',
                ]
            ],
            'modules' => [
                ['id' => 'mod1']
            ]
        ]),
        'mod1/bosModule.json' => json_encode([
            'type' => 'php',
            'requires' => ['users'],
            'tasks' => [
                'install:dummy' => [
                    'bos/dummy-install/users.simpleschema.txt',
                    'bos/dummy-install/dummy-users.jsonl',
                    'task:install',
                    'bos/dummy-install/dummy-data.jsonl'
                ],
                'install' => [
                    'bos/install/todos.simpleschema.txt', 
                ],
            ]
        ]),
        'mod1/bos/dummy-install/users.simpleschema.txt' => '
users:
    name string
        ',
        'mod1/bos/dummy-install/dummy-users.jsonl' => '
            {"users" : {"id": 1, "name" : "dummy-user" }}
        ',

        'mod1/bos/install/todos.simpleschema.txt' =>  '
todos:
    title string
    user_id references users(id)
        ',
        'mod1/bos/dummy-install/dummy-data.jsonl' => '
            {"todos" : {"id" : 1, "title" : "eerste todo", "user_id" : 1}}
            {"todos" : {"id" : 2, "title" : "tweede todo", "user_id" : 1}}
            {"todos" : {"id" : 3, "title" : "derde todo", "user_id" : 1}}
        '
    ]);

    // It's important that the tmp-directory is not destroyed,
    // otherwise the docker-container will lose its track on the directory.

    //system("tree " . TMP_DIR);

    echo "Starting docker...";
    system("docker-compose -f $DC_UNIT_TEST up -d");

    // Is the bos-exec-server available on port 9011?
    assertCurl('/ -v', 'HTTP/1.1 200 OK');

    assertCurl('/info -v', [
        'HTTP/1.1 200 OK',
        'Content-type: application/json',
        'env1',
        'mod1'
    ]);

    function run_test() {
        $TMP_DIR = TMP_DIR;

        // Environment gets created with a dynamic sql 
        // generated by php.

        assertCurl("/env/destroy/env1 -X POST -v", [
            'HTTP/1.1 200 OK',
        ]);

        assertCurl("/env/create/env1 -X POST -v", "HTTP/1.1 200 OK");
        
        assertCurl('/env/run_task/env1/mod1/install:dummy?logs=1 --data 1', [
            /* running: */
            'bos/dummy-install/users.simpleschema.txt',
            /* running: */
            'bos/dummy-install/dummy-users.jsonl',
            /* running: */
            'bos/install/todos.simpleschema.txt',
            /* running: */
            'bos/dummy-install/dummy-data.jsonl'
        ]);

        assertCurl('/data/tables/env1', [
            'users',
            'todos'
        ]);
    }
    run_test();
    

} catch (Exception $e) {
    fatalException($e);
}